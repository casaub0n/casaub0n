# workflow for building and deploying a component catalog of Storybook to GitHub Pages
#
# To get started with storybook see: https://storybook.js.org/docs/react/get-started/install
#
name: Deploy storybook to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths-ignore:
      - "*.md"
      - "packages/**"
      - "apps/casaub0n-astro/**"
      - "apps/nextjs-dashboard/**"
      - "Cargo.*"
      - "crates/**"
      # - "package.json"
      # - "pnpm-lock.yaml"
      # - ".github/**"

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  # actions: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.1.2
          run_install: false

      # I used https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-data
      # For now, it uses https://github.com/pnpm/action-setup/tree/v2/#use-cache-to-reduce-installation-time
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        id: setup-chrome
      - run: |
          echo Installed chromium version: ${{ steps.setup-chrome.outputs.chrome-version }}
          ${{ steps.setup-chrome.outputs.chrome-path }} --version

      - name: Create dot env file
        shell: bash
        run: |
          touch .env.ci
          echo "CHROME=${{ steps.setup-chrome.outputs.chrome-path }}" >> .env.ci

      - name: Setup Pages
        uses: actions/configure-pages@v5
        # with:
        # Automatically inject basePath in your Next.js configuration file and disable
        # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
        #
        # You may remove this line if you want to manage the configuration yourself.
        # static_site_generator: storybook
      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test --filter=@casaub0n/casaub0n-page
        env:
          CI: true
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Build static storybook
        run: pnpm build --filter=@casaub0n/catalog
        env:
          CI: true
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./apps/catalog/storybook-static

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
