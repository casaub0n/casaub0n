# https://turborepo.org/docs/ci/github-actions
# https://kotaro7750.hatenablog.com/entry/dotfile_ci
name: Userscript build by using turbo cache
on: [push]

jobs:
  dotfiles:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        script:
          [
            "./packages/dotfiles/init/linux/scripts/zsh.sh",
            "./packages/dotfiles/init/linux/scripts/tmux.sh",
          ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Install dotfiles
        run: ${{matrix.script}}

  Run-npm-on-Ubuntu:
    name: Run npm on Ubuntu
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      statuses: write
    env:
      CI: true
      TURBO_TOKEN: ${{ secrets.USERSCRIPT_TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.USERSCRIPT_TURBO_TEAM }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      # I used https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-data
      # For now, it uses https://github.com/pnpm/action-setup/tree/v2/#use-cache-to-reduce-installation-time
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        id: setup-chrome
      - run: |
          echo Installed chromium version: ${{ steps.setup-chrome.outputs.chrome-version }}
          ${{ steps.setup-chrome.outputs.chrome-path }} --version

      - name: Create dot env file
        shell: bash
        run: |
          touch .env.ci
          echo "CHROME=${{ steps.setup-chrome.outputs.chrome-path }}" >> .env.ci

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: test
        run: pnpm test:ci
